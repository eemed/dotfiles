#      __                                         ____
#     / /_____ ___  __  ___  __ _________  ____  / __/
#    / __/ __ `__ \/ / / / |/_// ___/ __ \/ __ \/ /_
#  _/ /_/ / / / / / /_/ />  <_/ /__/ /_/ / / / / __/
# (_)__/_/ /_/ /_/\__,_/_/|_(_)___/\____/_/ /_/_/
#
# Keybinds {{{
# prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Directory choices
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# prefix + arrows resize
bind -r Left resize-pane -L 1
bind -r Down resize-pane -D 1
bind -r Up resize-pane -U 1
bind -r Right resize-pane -R 1

bind-key S set-window-option synchronize-panes\; display-message \
"synchronize-panes is now #{?pane_synchronized,on,off}"
bind R source-file ~/.tmux.conf \; display "Reloaded!"
bind-key N command-prompt -p "Create new session:"  "new-session -s '%%'"
bind-key X confirm-before -p "kill-session? (y/n)" kill-session
bind-key P choose-window 'join-pane -h -t "%%"'
bind-key v capture-pane -S -32768 -b 'history'\;\
    save-buffer -b 'history' ~/.tmux-history \;\
    delete-buffer -b 'history'\;\
    split-window -h 'nvim ~/.tmux-history'

bind C-l send-keys 'C-l'

bind < swap-window -t -1
bind > swap-window -t +1
# }}}
# tmux-navigator {{{
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# }}}
# Settings {{{
set-option -g detach-on-destroy off
set-option -s escape-time 0
set -g base-index 1
set -g default-terminal "xterm-256color"
set-option -ag terminal-overrides ',xterm-256color:Tc'
set-option -g status-interval 1
set-option -g focus-events on
set-option -g display-time 1500
set -g set-clipboard on

set-option -g allow-rename off
setw -g monitor-activity on
set -g visual-activity off

# vim
set-option -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

set -g mouse on
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane paste-buffer
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"
# }}}
# Appearance {{{
<<<<<<< HEAD
set-option -g status-position bottom
set -g status-style bg=default
set-window-option -g mode-style bg=white,fg=black

# Left side of status bar
=======
>>>>>>> 1b46d9a00782df0f473abb951b97c477e088dfcf
set-option -g status-left-length 40
set-option -g status-left " [#S] "

# Right side of status bar
set-option -g status-right-length 70
<<<<<<< HEAD
set-option -g status-right "#[bg=colour0] %a %d.%m.%Y #[bg=colour8] %H:%M "
set-option -g status-right-style bg=colour8

set-option -g message-style fg=white,bg=colour8
set-option -g message-command-style fg=white,bg=colour8

# # Window status
setw -g window-status-style fg=white
set-option -g window-status-format "#[fg=white,bg=black] #I:#W "
set-option -g window-status-current-format \
"#[fg=colour7,bg=colour8,bold] #I:#W "
=======
set-option -g status-right "%a %d.%m.%Y | %H:%M "
set-option -g status-bg "#005f87"
set-option -g status-fg "#d1d1d1"
>>>>>>> 1b46d9a00782df0f473abb951b97c477e088dfcf

# Window separator
set-option -g window-status-separator "  "

# Window status alignment
set-option -g status-justify left
# }}}
