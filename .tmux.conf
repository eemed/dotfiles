# Keybinds {{{
# prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Directory choices
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# prefix + arrows resize
bind -r Left resize-pane -L 1
bind -r Down resize-pane -D 1
bind -r Up resize-pane -U 1
bind -r Right resize-pane -R 1

bind C-o rotate-window

bind-key S set-window-option synchronize-panes\; display-message \
"synchronize-panes is now #{?pane_synchronized,on,off}"
bind R source-file ~/.tmux.conf \; display "Reloaded!"
bind-key N command-prompt -p "Create new session:"  "new-session -s '%%'"
bind-key X confirm-before -p "kill-session? (y/n)" kill-session
bind-key P choose-window 'join-pane -h -t "%%"'
bind-key v capture-pane -S -32768 -b 'history'\;\
    save-buffer -b 'history' ~/.tmux-history \;\
    delete-buffer -b 'history'\;\
    split-window -h 'nvim ~/.tmux-history'

bind C-l send-keys 'C-l'

bind < swap-window -t -1
bind > swap-window -t +1

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
# }}}
# tmux-navigator {{{
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
# }}}
# Settings {{{
set-option -g detach-on-destroy off
set-option -s escape-time 0
set -g base-index 1
# set -g default-terminal "xterm-256color"
set-option -g default-terminal "screen-256color"

set-option -ag terminal-overrides ',xterm-256color:Tc'
set-option -g status-interval 1
set-option -g focus-events on
set-option -g display-time 1500
set -g set-clipboard on

set-option -g allow-rename off
setw -g monitor-activity on
set -g visual-activity off

# vim
set-option -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'Y' send -X copy-selection-and-cancel \; paste-buffer

set -g mouse on
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane paste-buffer
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"
# }}}
# Appearance {{{
set-option -g status-left-length 40
set-option -g status-left " [#S] "

# Right side of status bar
set-option -g status-right-length 70
set-option -g status-right "%a %d.%m.%Y | %H:%M "

# Window separator
set-option -g window-status-separator "  "

# Window status alignment
set-option -g status-justify left

# == Testing
set -g status-left-style                         fg="#99cc99"
set -g status-style                 bg="#393939",fg="#d1d1d1"
set -g status-right-style                        fg="#d1d1d1"
set -g pane-border-style                         fg=colour8
set -g mode-style                   bg="#6699cc",fg="#222222"
set -g message-style                bg="#99cc99",fg="#222222"
set -g message-command-style        bg="#99cc99",fg="#222222"
set -g window-status-activity-style bg="#f2777a",fg="#222222"
set -g window-status-current-style  bg="#393939",fg="#488edc"
set -g pane-border-style            fg="#505050"
set -g pane-active-border-style     bg=default,fg="#99cc99"
# }}}
