snippet => "Arrow function" i
	(${1:args}) => {
		${0}
	}

snippet f "Function"
	function ${1:name}() {
		${0}
	}

snippet cl "Console log"
	console.log(${0});

snippet req "Require"
	const ${1:name} = require('${0:fs}');

snippet reducer
	export default (state = {}, action) => {
		switch (action.type) {
			case ${1:case}:
				return {
					${0}
				};
			default:
				return state;
		}
	}

snippet type
	const ${1:type} = '$1';${0}

snippet action
	const ${1:name} = (${2:args}) => ({
		type: ${3},
		${0}
	});

snippet im
	import ${1:what} from '${0:where}';

snippet rc
	class ${1:name} extends React.Component {
		constructor(props) {
			super(props);
			${2}
		}

		render() {
			return (
				${0}
			);
		}
	}

snippet bind
	this.${1} = this.$1.bind(this);${0}
