# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet rcl "React class" b
import React from 'react';
import PropTypes from 'prop-types';

class ${1:class} extends React.Component {
	constructor(props) {
		super(props);
		${2}
	}

	render() {
		return (
			${3}
		);
	}
}

$1.propTypes = {
}

$1.defaultProps = {
}

export default $1;
endsnippet

snippet bin "Bind" b
this.${1} = this.$1.bind(this);
endsnippet

snippet cl "console log"
console.log(${1});
endsnippet

snippet => "arrow function" i
(${1:args}) => {
	${2:body}
}
endsnippet

snippet fun "Function"
function ${1:name}(${2:args}) {
	${3}
}
endsnippet

snippet imp "import"
import ${1:name} from '${2:where}';
endsnippet

snippet red "Reducer" b
export default (state = {}, action) => {
	switch (action.type) {
		case ${1:case}:
			return {
				${2}
			};
		default:
			return state;
	}
}
endsnippet

snippet req "require"
const ${1} = require('$1');
endsnippet
